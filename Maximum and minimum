#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void reverseArray(vector<int>& arr) {
    reverse(arr.begin(), arr.end());
}

bool isSorted(const vector<int>& arr) {
    for (size_t i = 1; i < arr.size(); i++) {
        if (arr[i] < arr[i - 1]) {
            return false;
        }
    }
    return true;
}

pair<int, int> findMinMax(const vector<int>& arr) {
    int minElem = *min_element(arr.begin(), arr.end());
    int maxElem = *max_element(arr.begin(), arr.end());
    return {minElem, maxElem};
}

// Function to display the array
void displayArray(const vector<int>& arr) {
    for (int num : arr) {
        cout << num << " ";
    }
    cout << endl;
}

int main() {
    const int SIZE = 10;
    vector<int> arr(SIZE);
    
    cout << "Enter " << SIZE << " integers: ";
    for (int i = 0; i < SIZE; i++) {
        cin >> arr[i];
    }
    
    int choice;
    do {
        cout << "\nMenu:" << endl;
        cout << "1. Reverse Array" << endl;
        cout << "2. Check if Sorted" << endl;
        cout << "3. Find Max and Min" << endl;
        cout << "4. Display Original Array" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        
        switch (choice) {
            case 1:
                reverseArray(arr);
                cout << "Reversed Array: ";
                displayArray(arr);
                break;
            case 2:
                if (isSorted(arr)) {
                    cout << "The array is sorted in ascending order." << endl;
                } else {
                    cout << "The array is not sorted." << endl;
                }
                break;
            case 3: {
                pair<int, int> minMax = findMinMax(arr);
                cout << "Minimum: " << minMax.first << ", Maximum: " << minMax.second << endl;
                break;
            }
            case 4:
                cout << "Original Array: ";
                displayArray(arr);
                break;
            case 5:
                cout << "Exiting program." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 5);
    
    return 0;
}
